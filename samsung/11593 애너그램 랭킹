#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string>
#include <iostream>
#include <set>
#include <map>

using namespace std;

long long int pactorial[21];

long long int check(string str)
{
	int i, j;
	long long int result = 0;

	for (i = 0; i < str.length(); i++)
	{
		long long int count = 0;
		set<char> sit;//자기자신의 자리
		for (j = i+1; j < str.length(); j++)
		{
			if (str[i] > str[j])//자신의 뒤에서 자기 자신보다 작은것을 set에 넣음
			{
				sit.insert(str[j]);
			}
		}
		set<char>::iterator iter;


		for (iter = sit.begin(); iter != sit.end(); iter++)//같은것을 포함하는 순열 개수 찾아냄.
		{
			count = 1;
			map<char, int> next;
			for (j = i; j < str.length(); j++)
			{
				if (next.find(str[j]) != next.end())
					next[str[j]]++;
				else
					next[str[j]] = 1;
			}
			next[*iter]--;

			/// <summary>
			/// 같은 것을 포함하는 순열 계산
			/// </summary>
			/// <param name="str"></param>
			/// <returns></returns>
			count *= pactorial[str.length() - i - 1];

			map<char, int>::iterator map_iter;
			for (map_iter = next.begin(); map_iter != next.end(); map_iter++)
			{
				count/=pactorial[(*map_iter).second];
			}
			result += count;
		}


		//자기 자신보다 작은 것이 자기 자신을 대체하면 뒤에는 아무거나 들어와도 되므로 팩토리얼 계산


	}
	return result;
}

int main(void)
{
	int tc;
	long long int count = 1;
	pactorial[0] = 1;
	for (int i = 1; i < 21; i++)
	{
		pactorial[i] = pactorial[i - 1] * i;
	}



	scanf("%d", &tc);
	for(int i=1; i<=tc; i++)
	{
		string str;
		cin >> str;

		printf("#%d %lld\n", i, check(str));

	}
}
